services:
  web:
    build:
      context: .
      dockerfile: web.Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - ACCESS_TOKEN_LIFETIME_MINUTES=${ACCESS_TOKEN_LIFETIME_MINUTES}
      - REFRESH_TOKEN_LIFETIME_DAYS=${REFRESH_TOKEN_LIFETIME_DAYS}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_AUTH_HEADER_TYPE=${JWT_AUTH_HEADER_TYPE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    command: >
      sh -c "sleep 5 &&
         python manage.py migrate &&
         python manage.py collectstatic --noinput &&
         gunicorn movie_website.wsgi:application --bind 0.0.0.0:8000"
         
  celery:
    build:
      context: .
      dockerfile: celery.Dockerfile
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - ACCESS_TOKEN_LIFETIME_MINUTES=${ACCESS_TOKEN_LIFETIME_MINUTES}
      - REFRESH_TOKEN_LIFETIME_DAYS=${REFRESH_TOKEN_LIFETIME_DAYS}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_AUTH_HEADER_TYPE=${JWT_AUTH_HEADER_TYPE}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A movie_website worker --loglevel=info

  redis:
    image: redis:7
    ports:
      - "${REDIS_PORT:-6379}:6379"
    env_file:
      - .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  default:
    driver: bridge